#unit_edit_form
  = form_for [ @gang, @unit ] do |f|
    - if @unit.errors.any?
      #error_explanation
        %h2= "#{pluralize(@unit.errors.count, "error")} prohibited this unit from being saved:"
        %ul
          - @unit.errors.full_messages.each do |message|
            %li= message

    %b
      Type d'unitÃ©
    = f.select( :libe, options_for_vue( :libe_select_options ), {}, class: 'form-control', 'v-model' => :selected_libe, disabled: @edition )

    %b
      Arme
    = f.select( :weapon, options_for_vue( :weapon_select_options ), {}, class: 'form-control', 'v-model' => :selected_weapon, disabled: @edition )

    .mt-3

    -# In case we need autocompletion, here are something : https://bootstrap-autocomplete.readthedocs.io/en/latest/
    .row
      .col-6.col-lg-3
        = f.number_field :amount, class: 'form-control', 'v-model' => :update_number_field

      .col-6.col-lg-2
        = f.number_field :points, class: 'form-control', placeholder: 'Points', readonly: true

    .actions
      = f.submit 'Enregistrer', class: 'mt-2 btn btn-secondary'

  -#= hidden_field_tag :weapon_select_options_prepared_strings, @weapon_select_options_prepared_strings.to_json
  = hidden_field_tag :units_data, @units.to_json
  = hidden_field_tag :libe_select_data, GameRules::FactionsVue.libe_select_data( @player ).to_json
  = hidden_field_tag :weapons_select_data, GameRules::FactionsVue.weapons_select_data( @player ).to_json

  = hidden_field_tag :selected_libe, @unit.libe
  = hidden_field_tag :selected_weapon, @unit.weapon

